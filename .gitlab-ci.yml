stages:
  - build
  - test

variables:
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"
  JULIA_NUM_THREADS: '4'
  JULIA_VERSION: 1.3.0

.root:
  tags:
    - 'p6000'
  only:
    - master
    - tags
    - external
    - pushes

build:
  extends: .root
  stage: build
  script:
    - curl https://julialang-s3.julialang.org/bin/linux/x64/$(echo $JULIA_VERSION | cut -d '.' -f 1,2)/julia-${JULIA_VERSION}-linux-x86_64.tar.gz -o julia.tar.gz
    - unp julia.tar.gz
    - export PATH="$(pwd)/julia-${JULIA_VERSION}/bin:$PATH"
    - mkdir $JULIA_DEPOT_PATH # Pkg.jl#325
    - julia -e "using InteractiveUtils;
                versioninfo()"
    - julia --project -e "using Pkg; Pkg.build(); using OrdinaryDiffEq;"
  artifacts:
    when: always
    paths:
      - Manifest.toml
      - .julia/
      - julia-${JULIA_VERSION}/

.test:
  extends: .root
  stage: test
  dependencies:
    - build
  before_script:
    - export PATH="$(pwd)/julia-${JULIA_VERSION}/bin:$PATH"
    - julia -e "using InteractiveUtils;
                versioninfo()"

test-arm1:
  extends: .test
  variables:
    GROUP: "Interface"
  script:
    - julia --project -e "using Pkg; Pkg.test();"

test-arm2:
  extends: .test
  variables:
    GROUP: "Regression"
  script:
    - julia --project -e "using Pkg; Pkg.test();"

test-multithreading:
  extends: .test
  variables:
    GROUP: "Multithreading"
  script:
    - julia --project -e "using Pkg; Pkg.test();"

test-GPU:
  extends: .test
  variables:
    GROUP: "GPU"
  script:
    - julia --project -e "using Pkg; Pkg.add(\"CuArrays\"); Pkg.test();"
